package com.exodus.weather.store;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import java.util.Map;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig cityDaoConfig;
    private final DaoConfig futureWeatherDaoConfig;
    private final DaoConfig listCityDaoConfig;

    private final CityDao cityDao;
    private final FutureWeatherDao futureWeatherDao;
    private final ListCityDao listCityDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        cityDaoConfig = daoConfigMap.get(CityDao.class).clone();
        cityDaoConfig.initIdentityScope(type);

        futureWeatherDaoConfig = daoConfigMap.get(FutureWeatherDao.class).clone();
        futureWeatherDaoConfig.initIdentityScope(type);

        listCityDaoConfig = daoConfigMap.get(ListCityDao.class).clone();
        listCityDaoConfig.initIdentityScope(type);

        cityDao = new CityDao(cityDaoConfig, this);
        futureWeatherDao = new FutureWeatherDao(futureWeatherDaoConfig, this);
        listCityDao = new ListCityDao(listCityDaoConfig, this);

        registerDao(City.class, cityDao);
        registerDao(FutureWeather.class, futureWeatherDao);
        registerDao(ListCity.class, listCityDao);
    }
    
    public void clear() {
        cityDaoConfig.clearIdentityScope();
        futureWeatherDaoConfig.clearIdentityScope();
        listCityDaoConfig.clearIdentityScope();
    }

    public CityDao getCityDao() {
        return cityDao;
    }

    public FutureWeatherDao getFutureWeatherDao() {
        return futureWeatherDao;
    }

    public ListCityDao getListCityDao() {
        return listCityDao;
    }

}
